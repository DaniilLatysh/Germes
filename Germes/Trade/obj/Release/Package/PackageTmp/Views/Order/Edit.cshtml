@model Trade.Models.OrderViewModel

@{
    ViewBag.Title = "Order | Edit";
}


<div class="order-data">
    <fieldset>

        @if (Model.Order != null)
        {
            <legend>
                ORDER - @Model.Order.OrderID <br />@Model.Order.CreateOrder
            </legend>
        }

        @using (Html.BeginForm("Edit", "Order", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "setDate()" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Order.OrderID)


            <div class="col-lg-12 form-rows">
                @{ Html.RenderPartial("Cart", Model);}
            </div>

            <div class="col-md-12">
                <div class="form-group">
                    <hr />
                    <div class="col-md-8">
                        <h4>TOTAL AMOUNT: @Model.Order.TotalAmount</h4>
                    </div>
                    <div class="col-md-4">
                        @if (!(Model.Order.Status.NameStatus.Equals("Closed")))
                        {
                            <input type="submit" value="Save" class="btn btn-default" />
                            <a href="@Url.Action("Delete", "Trade", new { id = Model.Order.OrderID })" class="btn btn-danger" title="Don't do that...">DELETE</a>
                        }
                        else
                        {
                            <div class="alert alert-danger">Order has been closed. Modify are not available.</div>
                        }
                    </div>

                </div>
                <hr />
            </div>

            <div class="col-md-6">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Order.Client.ClientID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Order.Client.NameClient, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Order.Client.NameClient, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Order.Client.NameClient, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Order.Client.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Order.Client.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Order.Client.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Order.Client.Adress, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Order.Client.Adress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Order.Client.Adress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Order.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Order.Description, new { htmlAttributes = new { @type = "textarea", @class = "form-control", @placeholder = "Description" } })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Order.Status.StatusID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Order.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.SelectedSatusID, Model.Statuses, new { @class = "dropdown-menu" })
                        </div>
                        <label class="control-label col-md-2">Shipping</label>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Order.CostDelivery, new { htmlAttributes = new { @class = "form-control", @placeholder = "$" } })
                        </div>

                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Order.DeliveryTimeFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            <div class="input-group">
                                @Html.EditorFor(m => m.Order.DeliveryTimeFrom, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        @Html.LabelFor(model => model.Order.DeliveryTimeTo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            <div class="input-group">
                                @Html.EditorFor(model => model.Order.DeliveryTimeTo, new { htmlAttributes = new { @class = "form-control time-to" } })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Order.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(m => m.Order.DeliveryDate, new { htmlAttributes = new { @class = "form-control datepicker", @id = "date" } })
                        </div>

                    </div>


                </div>
            </div>
            }
    </fieldset>
</div>

<script src="~/Scripts/DateMaker.js"></script>